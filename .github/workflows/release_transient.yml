name: Ephemeral Environment Workflow

on:
  pull_request:
    types:
      - labeled
      - unlabeled

jobs:
  spin_up_deployment:
    if: github.event.action == 'labeled' && github.event.label.name == 'ephemeral'
    name: Spin Up Ephemeral Environment
    runs-on: ubuntu-latest

    steps:
      - name: Show GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Trigger GitHub Deployment
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              environment: 'ephemeral',
              description: 'Spinning up ephemeral environment',
              transient_environment: true,
            });
            console.log(`Deployment created with ID: ${response.data.id}`);

  tear_down_deployment:
    if: github.event.action == 'unlabeled' && github.event.label.name == 'ephemeral'
    name: Tear Down Ephemeral Environment
    runs-on: ubuntu-latest

    steps:
      - name: Update GitHub Deployment
        uses: actions/github-script@v7
        with:
          script: |
            let response = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
            });
            console.log(`Deployments: \n${response.data}`);

            response = await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: response.data[0].id,
              state: 'inactive',
              description: 'Tearing down ephemeral environment',
            });
